What is Dom ?
Ans . whenever html code is loaded onto the browser crossponding that another reprentation is created which is known as dom . It reprents in the form of nodes
and object.

What is Virtual Dom ?
Ans. React uses virtual DOM exists which is like a lightweight copy of the actual dom(a virtual reprentation of the dom). So for every object that exists in the original DOM , there is an object for that in React Virtual DOM . It is exactly the same , but it does not have the power to directly change the layout of the document. Manipulating the layout dom is slow , but Manipulating virtual dom is fast as nothing gets drawn on the screen . So each time there is a change in the state of our application , the virtual dom gets updated first instead of the real dom .

HOW virtual dom actually make things faster : When anything new is added to the application , a virtual dom is creted and it is reprented as a tree . Each element in the application is a node in this tree . So , whenever there is a change in the state of any element , a new virtual dom tree is created . This new Virtual dom tree is then compared with the previous virtual dom tree and make a note of the changes . After this , it finds the best possible ways to make these changes to the real DOM . Now only the updated part will get rendered on the page again. 


Q1. When would you use useRef ?
Ans. Then main use Cases :

1. To store a ref to Dom element so you can later do something with them:
Consider : 
function TextInputWithFocusButton() {
   const inputEl = useRef(null);
   const onButtonClick = () => {
       inputEl.current.focus();
   };
   return (
       <>
           <input ref={inputEl} type="text"/>
           <button onClick={onButtonClick}>Focus the input</button>
       </>
   );
}




Q17: When writing a Custom Hook, what is the difference between it and a normal function?
Answer
Hooks use a stateful closure around the invocation of the function component to store the state on behalf of that component instance. That closure is maintained by React.

Custom hook will only be "stateful" if you use state with useState inside (or something that implements useState),
Hooks should be called from the React code only not from the regular JS functions. Hence, Hooks' scope is limited to the React code world and has more power to do a lot with React code,
In the class-based components, the Hooks won't work but regular functions will.
In the regular JS functions, you can't access useState, useEffect, useContext etc. but in react custom hooks I can.




What is useState in React ?
Ans. The useState() is used to maintain the local state of the component.When using the useState there are few things to note 

1.SetState is kind of async in nature.
2.SetState batches the updates.
3. SetState can take  updater function which will be use the value from react store internally.
So basically It doesn't do that instantly it goes to queue react is now runnig its internal logic to decide and after that it will update
basically it tries to compare old state and new State if it is equal then it will not update the UI else it will update.

What are keys in react ?
Ans. A key is a special string attribute that needs to be included when using lists of element.

Importance of keys in react 
1. Keys should be given to array elements for providing a unique identity for each element.
2. Without keys React does not understand the order of uniqueness of each element.
3. With key react has an idea of which particular element is added , removed or updated.

What is JSX ?
Ans .   JSX stands for javascript xml . It allows us to write HTML inside react and place them in the dom.without using any mehods like 
react.createelement or appendchild method.Jsx converts the html tags into react elements. 


What is Babel ?
Ans.  Babel is javascript compiler that is mainly used to convert ecmascript 2015+ code into a backward compatible version of javascript in current and older browser or enviroment . React uses babel to convert JSX into javascript.


Difference b/w the functional Component and class components ?
Ans. Functional Component :- 
 1. A functional Component is just a javascript function that that accepts props as an argument and returns jsx as their result.
 2. There is no render method used in functional Component.
 3. Functional component run from top to bottom and once the function is returned it can't be kept alive.
 4. constructors are not used in functional Component.

   Class Component :-
    
 1. A class component requires you to extend from React.Component and creates a render function which return a react element
 2. It must have a render method returning jsx
 3. Class components is instantiated and have different life cycle methods is kept alive and being run and invoked depending on phase of class
 Component
 4. constructors are used as it needs to store state.



Question : Difference between controlled components and uncontrolled components ?
Answer : Controlled :- In a controlled component the values of the input element is controlled by react . We store the the state of the component inside the the code and by using event any changes made to the input element will be reflected in the code as well.

uncontrolled :- In an uncontrolled component the value of the input element
is handled by dom . Input elements inside the uncontrolled
component work just like normal html 